version: '3.2'

services:
  graphhopper:
    image: graphhopper/graphhopper:stable
    volumes:
       - ./data:/data
       - ./graphhopper/config.properties:/graphhopper/config.properties
    ports:
      - "11111:11111"
      - "8989:8989"
    command : ["/data/bayern-latest.osm.pbf"]
    environment:
      - JAVA_OPTS=-Xmx6G

  osrm-frontend:
    #image: osrm/osrm-frontend
    # docker run -d --link osrm-api:api --name osrm-mos-front --restart=always -p 8080:80 cartography/osrm-frontend-docker
    image: cartography/osrm-frontend-docker
    restart: always
    #stdin_open: true
    #tty: true
    volumes:
      - ./data/upstream.conf:/etc/nginx/upstream.conf
    environment:
      #- OSRM_BACKEND='http://osrm:5000'
      - API_PORT_5000_TCP_ADDR=osrm
      - API_PORT_5000_TCP_PORT=5000
    ports:
      - "8080:80"
    networks:
      - osrm
  osrm-backend:
    #image: osrm/osrm-backend
    # docker run -d -p 5000:5000 --name osrm-api cartography/osrm-backend-docker:latest osrm California "http://download.geofabrik.de/north-america/us/california-latest.osm.pbf"
    image: cartography/osrm-backend-docker:latest
    #restart: always
    #stdin_open: true
    #tty: true
    ports:
      - "5000:5000"
    volumes:
       - ./data:/data
    command: ["osrm", "bayern", "file:///data/bayern-latest.osm.pbf"]

    #entrypoint: "osrm-routed"
    #command: "--algorithm mld /data/osm-latest.osrm"
    networks:
      - osrm

networks:
  osrm:
    external: true
